"""Add APIKey model for secure authentication

Revision ID: 8e8a6886849d
Revises: 0909774e3297
Create Date: 2025-07-27 20:35:03.803922

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '8e8a6886849d'
down_revision = '0909774e3297'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('api_keys',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('key_hash', sa.String(length=64), nullable=False),
    sa.Column('key_prefix', sa.String(length=12), nullable=False),
    sa.Column('scopes', sa.JSON(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_used_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('usage_count', sa.Integer(), nullable=False),
    sa.Column('rate_limit_per_hour', sa.Integer(), nullable=False),
    sa.Column('created_by', sa.String(length=100), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_api_keys')),
    sa.UniqueConstraint('key_hash', name='uq_api_keys_hash')
    )
    with op.batch_alter_table('api_keys', schema=None) as batch_op:
        batch_op.create_index('ix_api_keys_active', ['is_active'], unique=False, postgresql_where='is_active = true')
        batch_op.create_index('ix_api_keys_created_by', ['created_by'], unique=False)
        batch_op.create_index('ix_api_keys_hash', ['key_hash'], unique=False)
        batch_op.create_index('ix_api_keys_prefix', ['key_prefix'], unique=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('api_keys', schema=None) as batch_op:
        batch_op.drop_index('ix_api_keys_prefix')
        batch_op.drop_index('ix_api_keys_hash')
        batch_op.drop_index('ix_api_keys_created_by')
        batch_op.drop_index('ix_api_keys_active', postgresql_where='is_active = true')

    op.drop_table('api_keys')
    # ### end Alembic commands ###