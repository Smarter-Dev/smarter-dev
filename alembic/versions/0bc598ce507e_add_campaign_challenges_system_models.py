"""Add campaign challenges system models

Revision ID: 0bc598ce507e
Revises: f252668f8bc3
Create Date: 2025-08-11 21:28:04.254864

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '0bc598ce507e'
down_revision = 'f252668f8bc3'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('campaigns',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('guild_id', sa.String(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('campaign_type', sa.String(length=20), nullable=False),
    sa.Column('state', sa.String(length=20), nullable=False),
    sa.Column('start_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('release_delay_minutes', sa.Integer(), nullable=False),
    sa.Column('scoring_type', sa.String(length=20), nullable=False),
    sa.Column('starting_points', sa.Integer(), nullable=True),
    sa.Column('points_decrease_step', sa.Integer(), nullable=True),
    sa.Column('announcement_channel_id', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.CheckConstraint("campaign_type IN ('player', 'squad')", name=op.f('ck_campaigns_ck_campaigns_type')),
    sa.CheckConstraint("scoring_type IN ('time_based', 'point_based')", name=op.f('ck_campaigns_ck_campaigns_scoring_type')),
    sa.CheckConstraint("state IN ('draft', 'active', 'completed')", name=op.f('ck_campaigns_ck_campaigns_state')),
    sa.CheckConstraint('release_delay_minutes > 0', name=op.f('ck_campaigns_ck_campaigns_release_delay_positive')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_campaigns'))
    )
    with op.batch_alter_table('campaigns', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_campaigns_guild_id'), ['guild_id'], unique=False)
        batch_op.create_index('ix_campaigns_guild_state', ['guild_id', 'state'], unique=False)
        batch_op.create_index('ix_campaigns_start_date', ['start_date'], unique=False)
        batch_op.create_index('ix_campaigns_state', ['state'], unique=False)

    op.create_table('submission_rate_limits',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('participant_id', sa.String(), nullable=False),
    sa.Column('participant_type', sa.String(length=10), nullable=False),
    sa.Column('submission_timestamp', sa.DateTime(timezone=True), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.CheckConstraint("participant_type IN ('player', 'squad')", name=op.f('ck_submission_rate_limits_ck_submission_rate_limits_participant_type')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_submission_rate_limits'))
    )
    with op.batch_alter_table('submission_rate_limits', schema=None) as batch_op:
        batch_op.create_index('ix_submission_rate_limits_participant', ['participant_id', 'participant_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_submission_rate_limits_participant_id'), ['participant_id'], unique=False)
        batch_op.create_index('ix_submission_rate_limits_participant_timestamp', ['participant_id', 'participant_type', 'submission_timestamp'], unique=False)
        batch_op.create_index(batch_op.f('ix_submission_rate_limits_submission_timestamp'), ['submission_timestamp'], unique=False)
        batch_op.create_index('ix_submission_rate_limits_timestamp', ['submission_timestamp'], unique=False)

    op.create_table('challenges',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('campaign_id', sa.UUID(), nullable=False),
    sa.Column('order_position', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('generation_script', sa.Text(), nullable=False),
    sa.Column('script_updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('categories', sa.JSON(), nullable=False),
    sa.Column('difficulty_level', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.CheckConstraint('difficulty_level >= 1 AND difficulty_level <= 10', name=op.f('ck_challenges_ck_challenges_difficulty_range')),
    sa.CheckConstraint('order_position > 0', name=op.f('ck_challenges_ck_challenges_order_positive')),
    sa.ForeignKeyConstraint(['campaign_id'], ['campaigns.id'], name=op.f('fk_challenges_campaign_id_campaigns'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_challenges')),
    sa.UniqueConstraint('campaign_id', 'order_position', name='uq_challenges_campaign_order')
    )
    with op.batch_alter_table('challenges', schema=None) as batch_op:
        batch_op.create_index('ix_challenges_campaign_id', ['campaign_id'], unique=False)
        batch_op.create_index('ix_challenges_campaign_order', ['campaign_id', 'order_position'], unique=False)
        batch_op.create_index('ix_challenges_script_updated', ['script_updated_at'], unique=False)

    op.create_table('challenge_submissions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('challenge_id', sa.UUID(), nullable=False),
    sa.Column('participant_id', sa.String(), nullable=False),
    sa.Column('participant_type', sa.String(length=10), nullable=False),
    sa.Column('submitted_result', sa.Text(), nullable=False),
    sa.Column('is_correct', sa.Boolean(), nullable=False),
    sa.Column('points_awarded', sa.Integer(), nullable=False),
    sa.Column('submission_timestamp', sa.DateTime(timezone=True), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.CheckConstraint("participant_type IN ('player', 'squad')", name=op.f('ck_challenge_submissions_ck_challenge_submissions_participant_type')),
    sa.CheckConstraint('points_awarded >= 0', name=op.f('ck_challenge_submissions_ck_challenge_submissions_points_non_negative')),
    sa.ForeignKeyConstraint(['challenge_id'], ['challenges.id'], name=op.f('fk_challenge_submissions_challenge_id_challenges'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_challenge_submissions'))
    )
    with op.batch_alter_table('challenge_submissions', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_challenge_submissions_challenge_id'), ['challenge_id'], unique=False)
        batch_op.create_index('ix_challenge_submissions_challenge_participant', ['challenge_id', 'participant_id', 'participant_type'], unique=False)
        batch_op.create_index('ix_challenge_submissions_correct', ['is_correct'], unique=False)
        batch_op.create_index('ix_challenge_submissions_participant', ['participant_id', 'participant_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_challenge_submissions_submission_timestamp'), ['submission_timestamp'], unique=False)
        batch_op.create_index('ix_challenge_submissions_timestamp', ['submission_timestamp'], unique=False)

    op.create_table('generated_input_cache',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('challenge_id', sa.UUID(), nullable=False),
    sa.Column('participant_id', sa.String(), nullable=False),
    sa.Column('participant_type', sa.String(length=10), nullable=False),
    sa.Column('input_json', sa.JSON(), nullable=False),
    sa.Column('expected_result', sa.Text(), nullable=False),
    sa.Column('is_valid', sa.Boolean(), nullable=False),
    sa.Column('generation_timestamp', sa.DateTime(timezone=True), nullable=False),
    sa.Column('first_request_timestamp', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.CheckConstraint("participant_type IN ('player', 'squad')", name=op.f('ck_generated_input_cache_ck_generated_input_cache_participant_type')),
    sa.ForeignKeyConstraint(['challenge_id'], ['challenges.id'], name=op.f('fk_generated_input_cache_challenge_id_challenges'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_generated_input_cache')),
    sa.UniqueConstraint('challenge_id', 'participant_id', 'participant_type', name='uq_generated_input_cache_challenge_participant')
    )
    with op.batch_alter_table('generated_input_cache', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_generated_input_cache_challenge_id'), ['challenge_id'], unique=False)
        batch_op.create_index('ix_generated_input_cache_challenge_participant', ['challenge_id', 'participant_id', 'participant_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_generated_input_cache_is_valid'), ['is_valid'], unique=False)
        batch_op.create_index('ix_generated_input_cache_participant', ['participant_id', 'participant_type'], unique=False)
        batch_op.create_index('ix_generated_input_cache_validity', ['is_valid'], unique=False)

    with op.batch_alter_table('squads', schema=None) as batch_op:
        batch_op.alter_column('is_default',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               existing_nullable=False)
        batch_op.drop_index(batch_op.f('uq_squads_guild_default'), postgresql_where='(is_default = true)')

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('squads', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('uq_squads_guild_default'), ['guild_id'], unique=True, postgresql_where='(is_default = true)')
        batch_op.alter_column('is_default',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('false'),
               existing_nullable=False)

    with op.batch_alter_table('generated_input_cache', schema=None) as batch_op:
        batch_op.drop_index('ix_generated_input_cache_validity')
        batch_op.drop_index('ix_generated_input_cache_participant')
        batch_op.drop_index(batch_op.f('ix_generated_input_cache_is_valid'))
        batch_op.drop_index('ix_generated_input_cache_challenge_participant')
        batch_op.drop_index(batch_op.f('ix_generated_input_cache_challenge_id'))

    op.drop_table('generated_input_cache')
    with op.batch_alter_table('challenge_submissions', schema=None) as batch_op:
        batch_op.drop_index('ix_challenge_submissions_timestamp')
        batch_op.drop_index(batch_op.f('ix_challenge_submissions_submission_timestamp'))
        batch_op.drop_index('ix_challenge_submissions_participant')
        batch_op.drop_index('ix_challenge_submissions_correct')
        batch_op.drop_index('ix_challenge_submissions_challenge_participant')
        batch_op.drop_index(batch_op.f('ix_challenge_submissions_challenge_id'))

    op.drop_table('challenge_submissions')
    with op.batch_alter_table('challenges', schema=None) as batch_op:
        batch_op.drop_index('ix_challenges_script_updated')
        batch_op.drop_index('ix_challenges_campaign_order')
        batch_op.drop_index('ix_challenges_campaign_id')

    op.drop_table('challenges')
    with op.batch_alter_table('submission_rate_limits', schema=None) as batch_op:
        batch_op.drop_index('ix_submission_rate_limits_timestamp')
        batch_op.drop_index(batch_op.f('ix_submission_rate_limits_submission_timestamp'))
        batch_op.drop_index('ix_submission_rate_limits_participant_timestamp')
        batch_op.drop_index(batch_op.f('ix_submission_rate_limits_participant_id'))
        batch_op.drop_index('ix_submission_rate_limits_participant')

    op.drop_table('submission_rate_limits')
    with op.batch_alter_table('campaigns', schema=None) as batch_op:
        batch_op.drop_index('ix_campaigns_state')
        batch_op.drop_index('ix_campaigns_start_date')
        batch_op.drop_index('ix_campaigns_guild_state')
        batch_op.drop_index(batch_op.f('ix_campaigns_guild_id'))

    op.drop_table('campaigns')
    # ### end Alembic commands ###