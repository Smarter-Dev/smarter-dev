"""Initial squashed migration with all models

Revision ID: 33ca798f1a90
Revises: 
Create Date: 2025-08-22 19:25:02.813546

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '33ca798f1a90'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('api_keys',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(length=500), nullable=True),
    sa.Column('key_hash', sa.String(length=64), nullable=False),
    sa.Column('key_prefix', sa.String(length=12), nullable=False),
    sa.Column('scopes', sa.JSON(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('revoked_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_used_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('usage_count', sa.Integer(), nullable=False),
    sa.Column('rate_limit_per_second', sa.Integer(), nullable=False),
    sa.Column('rate_limit_per_minute', sa.Integer(), nullable=False),
    sa.Column('rate_limit_per_15_minutes', sa.Integer(), nullable=False),
    sa.Column('rate_limit_per_hour', sa.Integer(), nullable=False),
    sa.Column('created_by', sa.String(length=100), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_api_keys')),
    sa.UniqueConstraint('key_hash', name='uq_api_keys_hash'),
    sa.UniqueConstraint('key_hash', name=op.f('uq_api_keys_key_hash'))
    )
    with op.batch_alter_table('api_keys', schema=None) as batch_op:
        batch_op.create_index('ix_api_keys_active', ['is_active'], unique=False, postgresql_where='is_active = true')
        batch_op.create_index('ix_api_keys_created_by', ['created_by'], unique=False)
        batch_op.create_index('ix_api_keys_hash', ['key_hash'], unique=False)
        batch_op.create_index('ix_api_keys_prefix', ['key_prefix'], unique=False)

    op.create_table('blog_posts',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('slug', sa.String(length=200), nullable=False),
    sa.Column('body', sa.Text(), nullable=False),
    sa.Column('author', sa.String(length=100), nullable=False),
    sa.Column('is_published', sa.Boolean(), nullable=False),
    sa.Column('published_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_blog_posts')),
    sa.UniqueConstraint('slug', name='uq_blog_posts_slug')
    )
    with op.batch_alter_table('blog_posts', schema=None) as batch_op:
        batch_op.create_index('ix_blog_posts_author', ['author'], unique=False)
        batch_op.create_index('ix_blog_posts_created_at', ['created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_blog_posts_is_published'), ['is_published'], unique=False)
        batch_op.create_index('ix_blog_posts_published', ['is_published', 'published_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_blog_posts_published_at'), ['published_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_blog_posts_slug'), ['slug'], unique=True)

    op.create_table('bytes_balances',
    sa.Column('guild_id', sa.String(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('balance', sa.BigInteger(), nullable=False),
    sa.Column('total_received', sa.BigInteger(), nullable=False),
    sa.Column('total_sent', sa.BigInteger(), nullable=False),
    sa.Column('streak_count', sa.BigInteger(), nullable=False),
    sa.Column('last_daily', sa.Date(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('guild_id', 'user_id', name=op.f('pk_bytes_balances'))
    )
    op.create_table('bytes_configs',
    sa.Column('guild_id', sa.String(), nullable=False),
    sa.Column('starting_balance', sa.Integer(), nullable=False),
    sa.Column('daily_amount', sa.Integer(), nullable=False),
    sa.Column('streak_bonuses', sa.JSON(), nullable=False),
    sa.Column('max_transfer', sa.Integer(), nullable=False),
    sa.Column('transfer_cooldown_hours', sa.Integer(), nullable=False),
    sa.Column('role_rewards', sa.JSON(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('guild_id', name=op.f('pk_bytes_configs'))
    )
    op.create_table('bytes_transactions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('guild_id', sa.String(), nullable=False),
    sa.Column('giver_id', sa.String(), nullable=False),
    sa.Column('giver_username', sa.String(), nullable=False),
    sa.Column('receiver_id', sa.String(), nullable=False),
    sa.Column('receiver_username', sa.String(), nullable=False),
    sa.Column('amount', sa.BigInteger(), nullable=False),
    sa.Column('reason', sa.String(length=200), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_bytes_transactions'))
    )
    with op.batch_alter_table('bytes_transactions', schema=None) as batch_op:
        batch_op.create_index('ix_bytes_transactions_created_at', ['created_at'], unique=False)
        batch_op.create_index('ix_bytes_transactions_giver_id', ['giver_id'], unique=False)
        batch_op.create_index('ix_bytes_transactions_guild_giver', ['guild_id', 'giver_id'], unique=False)
        batch_op.create_index('ix_bytes_transactions_guild_id', ['guild_id'], unique=False)
        batch_op.create_index('ix_bytes_transactions_guild_receiver', ['guild_id', 'receiver_id'], unique=False)
        batch_op.create_index('ix_bytes_transactions_receiver_id', ['receiver_id'], unique=False)

    op.create_table('campaigns',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('guild_id', sa.String(), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('start_time', sa.DateTime(timezone=True), nullable=False),
    sa.Column('release_cadence_hours', sa.Integer(), nullable=False),
    sa.Column('announcement_channels', sa.JSON(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_by', sa.String(length=100), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.CheckConstraint('release_cadence_hours >= 1 AND release_cadence_hours <= 168', name=op.f('ck_campaigns_ck_campaigns_cadence_range')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_campaigns')),
    sa.UniqueConstraint('guild_id', 'title', name='uq_campaigns_guild_title')
    )
    with op.batch_alter_table('campaigns', schema=None) as batch_op:
        batch_op.create_index('ix_campaigns_created_by', ['created_by'], unique=False)
        batch_op.create_index('ix_campaigns_guild_active', ['guild_id', 'is_active'], unique=False)
        batch_op.create_index(batch_op.f('ix_campaigns_guild_id'), ['guild_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_campaigns_is_active'), ['is_active'], unique=False)
        batch_op.create_index('ix_campaigns_start_time', ['start_time'], unique=False)

    op.create_table('forum_agents',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('guild_id', sa.String(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(length=500), nullable=False),
    sa.Column('system_prompt', sa.Text(), nullable=False),
    sa.Column('monitored_forums', sa.JSON(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('response_threshold', sa.Float(), nullable=False),
    sa.Column('max_responses_per_hour', sa.Integer(), nullable=False),
    sa.Column('created_by', sa.String(length=100), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.CheckConstraint('max_responses_per_hour >= 0', name=op.f('ck_forum_agents_ck_forum_agents_max_responses_positive')),
    sa.CheckConstraint('response_threshold >= 0.0 AND response_threshold <= 1.0', name=op.f('ck_forum_agents_ck_forum_agents_threshold_range')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_forum_agents')),
    sa.UniqueConstraint('guild_id', 'name', name='uq_forum_agents_guild_name')
    )
    with op.batch_alter_table('forum_agents', schema=None) as batch_op:
        batch_op.create_index('ix_forum_agents_created_by', ['created_by'], unique=False)
        batch_op.create_index('ix_forum_agents_guild_active', ['guild_id', 'is_active'], unique=False)
        batch_op.create_index('ix_forum_agents_guild_id', ['guild_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_forum_agents_is_active'), ['is_active'], unique=False)

    op.create_table('help_conversations',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('session_id', sa.String(length=64), nullable=False),
    sa.Column('guild_id', sa.String(), nullable=False),
    sa.Column('channel_id', sa.String(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('user_username', sa.String(length=100), nullable=False),
    sa.Column('started_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('last_activity_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('interaction_type', sa.String(length=20), nullable=False),
    sa.Column('is_resolved', sa.Boolean(), nullable=False),
    sa.Column('context_messages', sa.JSON(), nullable=True),
    sa.Column('user_question', sa.Text(), nullable=False),
    sa.Column('bot_response', sa.Text(), nullable=False),
    sa.Column('tokens_used', sa.Integer(), nullable=False),
    sa.Column('response_time_ms', sa.Integer(), nullable=True),
    sa.Column('retention_policy', sa.String(length=20), nullable=False),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_sensitive', sa.Boolean(), nullable=False),
    sa.Column('command_metadata', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_help_conversations'))
    )
    with op.batch_alter_table('help_conversations', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_help_conversations_channel_id'), ['channel_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_help_conversations_expires_at'), ['expires_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_help_conversations_guild_id'), ['guild_id'], unique=False)
        batch_op.create_index('ix_help_conversations_guild_started', ['guild_id', 'started_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_help_conversations_is_resolved'), ['is_resolved'], unique=False)
        batch_op.create_index(batch_op.f('ix_help_conversations_is_sensitive'), ['is_sensitive'], unique=False)
        batch_op.create_index(batch_op.f('ix_help_conversations_last_activity_at'), ['last_activity_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_help_conversations_session_id'), ['session_id'], unique=False)
        batch_op.create_index('ix_help_conversations_session_started', ['session_id', 'started_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_help_conversations_started_at'), ['started_at'], unique=False)
        batch_op.create_index('ix_help_conversations_tokens_started', ['tokens_used', 'started_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_help_conversations_user_id'), ['user_id'], unique=False)
        batch_op.create_index('ix_help_conversations_user_started', ['user_id', 'started_at'], unique=False)

    op.create_table('squad_sale_events',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('guild_id', sa.String(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(length=500), nullable=False),
    sa.Column('start_time', sa.DateTime(timezone=True), nullable=False),
    sa.Column('duration_hours', sa.Integer(), nullable=False),
    sa.Column('join_discount_percent', sa.Integer(), nullable=False),
    sa.Column('switch_discount_percent', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_by', sa.String(length=100), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.CheckConstraint('duration_hours >= 1', name=op.f('ck_squad_sale_events_ck_squad_sale_events_duration_positive')),
    sa.CheckConstraint('join_discount_percent >= 0 AND join_discount_percent <= 100', name=op.f('ck_squad_sale_events_ck_squad_sale_events_join_discount_range')),
    sa.CheckConstraint('switch_discount_percent >= 0 AND switch_discount_percent <= 100', name=op.f('ck_squad_sale_events_ck_squad_sale_events_switch_discount_range')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_squad_sale_events')),
    sa.UniqueConstraint('guild_id', 'name', name='uq_squad_sale_events_guild_name')
    )
    with op.batch_alter_table('squad_sale_events', schema=None) as batch_op:
        batch_op.create_index('ix_squad_sale_events_created_by', ['created_by'], unique=False)
        batch_op.create_index('ix_squad_sale_events_guild_active', ['guild_id', 'is_active'], unique=False)
        batch_op.create_index('ix_squad_sale_events_guild_id', ['guild_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_squad_sale_events_is_active'), ['is_active'], unique=False)
        batch_op.create_index(batch_op.f('ix_squad_sale_events_start_time'), ['start_time'], unique=False)

    op.create_table('squads',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('guild_id', sa.String(), nullable=False),
    sa.Column('role_id', sa.String(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(length=500), nullable=True),
    sa.Column('switch_cost', sa.Integer(), nullable=False),
    sa.Column('max_members', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_default', sa.Boolean(), nullable=False),
    sa.Column('welcome_message', sa.String(length=500), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_squads')),
    sa.UniqueConstraint('guild_id', 'role_id', name='uq_squads_guild_role')
    )
    with op.batch_alter_table('squads', schema=None) as batch_op:
        batch_op.create_index('ix_squads_guild_active', ['guild_id', 'is_active'], unique=False)
        batch_op.create_index('ix_squads_guild_default', ['guild_id', 'is_default'], unique=False)
        batch_op.create_index('ix_squads_guild_id', ['guild_id'], unique=False)
        batch_op.create_index('ix_squads_role_id', ['role_id'], unique=False)

    op.create_table('challenges',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('campaign_id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('order_position', sa.Integer(), nullable=False),
    sa.Column('points_value', sa.Integer(), nullable=False),
    sa.Column('python_script', sa.Text(), nullable=True),
    sa.Column('input_generator_script', sa.Text(), nullable=True),
    sa.Column('solution_validator_script', sa.Text(), nullable=True),
    sa.Column('is_released', sa.Boolean(), nullable=False),
    sa.Column('released_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_announced', sa.Boolean(), nullable=False),
    sa.Column('announced_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.CheckConstraint('order_position >= 1', name=op.f('ck_challenges_ck_challenges_position_positive')),
    sa.CheckConstraint('points_value >= 0', name=op.f('ck_challenges_ck_challenges_points_non_negative')),
    sa.ForeignKeyConstraint(['campaign_id'], ['campaigns.id'], name=op.f('fk_challenges_campaign_id_campaigns'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_challenges')),
    sa.UniqueConstraint('campaign_id', 'order_position', name='uq_challenges_campaign_position')
    )
    with op.batch_alter_table('challenges', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_challenges_announced_at'), ['announced_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_challenges_campaign_id'), ['campaign_id'], unique=False)
        batch_op.create_index('ix_challenges_campaign_position', ['campaign_id', 'order_position'], unique=False)
        batch_op.create_index('ix_challenges_is_announced', ['is_announced'], unique=False)
        batch_op.create_index(batch_op.f('ix_challenges_is_released'), ['is_released'], unique=False)
        batch_op.create_index(batch_op.f('ix_challenges_order_position'), ['order_position'], unique=False)
        batch_op.create_index(batch_op.f('ix_challenges_released_at'), ['released_at'], unique=False)

    op.create_table('forum_agent_responses',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('agent_id', sa.UUID(), nullable=False),
    sa.Column('guild_id', sa.String(), nullable=False),
    sa.Column('channel_id', sa.String(), nullable=False),
    sa.Column('thread_id', sa.String(), nullable=False),
    sa.Column('post_title', sa.String(length=300), nullable=False),
    sa.Column('post_content', sa.Text(), nullable=False),
    sa.Column('author_display_name', sa.String(length=100), nullable=False),
    sa.Column('post_tags', sa.JSON(), nullable=False),
    sa.Column('attachments', sa.JSON(), nullable=False),
    sa.Column('decision_reason', sa.Text(), nullable=False),
    sa.Column('confidence_score', sa.Float(), nullable=False),
    sa.Column('response_content', sa.Text(), nullable=False),
    sa.Column('tokens_used', sa.Integer(), nullable=False),
    sa.Column('response_time_ms', sa.Integer(), nullable=False),
    sa.Column('responded', sa.Boolean(), nullable=False),
    sa.Column('responded_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.CheckConstraint('confidence_score >= 0.0 AND confidence_score <= 1.0', name=op.f('ck_forum_agent_responses_ck_forum_agent_responses_confidence_range')),
    sa.CheckConstraint('response_time_ms >= 0', name=op.f('ck_forum_agent_responses_ck_forum_agent_responses_time_positive')),
    sa.CheckConstraint('tokens_used >= 0', name=op.f('ck_forum_agent_responses_ck_forum_agent_responses_tokens_positive')),
    sa.ForeignKeyConstraint(['agent_id'], ['forum_agents.id'], name=op.f('fk_forum_agent_responses_agent_id_forum_agents'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_forum_agent_responses'))
    )
    with op.batch_alter_table('forum_agent_responses', schema=None) as batch_op:
        batch_op.create_index('ix_forum_agent_responses_agent_created', ['agent_id', 'created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_forum_agent_responses_agent_id'), ['agent_id'], unique=False)
        batch_op.create_index('ix_forum_agent_responses_channel_created', ['channel_id', 'created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_forum_agent_responses_channel_id'), ['channel_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_forum_agent_responses_created_at'), ['created_at'], unique=False)
        batch_op.create_index('ix_forum_agent_responses_guild_created', ['guild_id', 'created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_forum_agent_responses_guild_id'), ['guild_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_forum_agent_responses_responded'), ['responded'], unique=False)
        batch_op.create_index('ix_forum_agent_responses_responded_at', ['responded_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_forum_agent_responses_thread_id'), ['thread_id'], unique=False)
        batch_op.create_index('ix_forum_agent_responses_tokens_created', ['tokens_used', 'created_at'], unique=False)

    op.create_table('scheduled_messages',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('campaign_id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('scheduled_time', sa.DateTime(timezone=True), nullable=False),
    sa.Column('is_sent', sa.Boolean(), nullable=False),
    sa.Column('sent_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_by', sa.String(length=100), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.CheckConstraint('scheduled_time IS NOT NULL', name=op.f('ck_scheduled_messages_ck_scheduled_messages_time_required')),
    sa.ForeignKeyConstraint(['campaign_id'], ['campaigns.id'], name=op.f('fk_scheduled_messages_campaign_id_campaigns'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_scheduled_messages'))
    )
    with op.batch_alter_table('scheduled_messages', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_scheduled_messages_campaign_id'), ['campaign_id'], unique=False)
        batch_op.create_index('ix_scheduled_messages_campaign_time', ['campaign_id', 'scheduled_time'], unique=False)
        batch_op.create_index('ix_scheduled_messages_is_sent', ['is_sent'], unique=False)
        batch_op.create_index('ix_scheduled_messages_scheduled_time', ['scheduled_time'], unique=False)
        batch_op.create_index('ix_scheduled_messages_sent_at', ['sent_at'], unique=False)

    op.create_table('security_logs',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('action', sa.String(length=100), nullable=False),
    sa.Column('api_key_id', sa.UUID(), nullable=True),
    sa.Column('user_identifier', sa.String(length=255), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.String(length=512), nullable=True),
    sa.Column('request_id', sa.String(length=100), nullable=True),
    sa.Column('success', sa.Boolean(), nullable=False),
    sa.Column('details', sa.Text(), nullable=False),
    sa.Column('event_metadata', sa.JSON(), nullable=True),
    sa.Column('timestamp', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['api_key_id'], ['api_keys.id'], name=op.f('fk_security_logs_api_key_id_api_keys'), ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_security_logs'))
    )
    with op.batch_alter_table('security_logs', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_security_logs_action'), ['action'], unique=False)
        batch_op.create_index('ix_security_logs_action_timestamp', ['action', 'timestamp'], unique=False)
        batch_op.create_index(batch_op.f('ix_security_logs_api_key_id'), ['api_key_id'], unique=False)
        batch_op.create_index('ix_security_logs_api_key_timestamp', ['api_key_id', 'timestamp'], unique=False)
        batch_op.create_index(batch_op.f('ix_security_logs_ip_address'), ['ip_address'], unique=False)
        batch_op.create_index('ix_security_logs_ip_timestamp', ['ip_address', 'timestamp'], unique=False)
        batch_op.create_index(batch_op.f('ix_security_logs_request_id'), ['request_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_security_logs_success'), ['success'], unique=False)
        batch_op.create_index('ix_security_logs_success_timestamp', ['success', 'timestamp'], unique=False)
        batch_op.create_index(batch_op.f('ix_security_logs_timestamp'), ['timestamp'], unique=False)
        batch_op.create_index(batch_op.f('ix_security_logs_user_identifier'), ['user_identifier'], unique=False)
        batch_op.create_index('ix_security_logs_user_timestamp', ['user_identifier', 'timestamp'], unique=False)

    op.create_table('squad_memberships',
    sa.Column('squad_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('guild_id', sa.String(), nullable=False),
    sa.Column('joined_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['squad_id'], ['squads.id'], name=op.f('fk_squad_memberships_squad_id_squads'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('squad_id', 'user_id', name=op.f('pk_squad_memberships'))
    )
    with op.batch_alter_table('squad_memberships', schema=None) as batch_op:
        batch_op.create_index('ix_squad_memberships_guild_id', ['guild_id'], unique=False)
        batch_op.create_index('ix_squad_memberships_guild_user', ['guild_id', 'user_id'], unique=False)
        batch_op.create_index('ix_squad_memberships_squad_id', ['squad_id'], unique=False)
        batch_op.create_index('ix_squad_memberships_user_id', ['user_id'], unique=False)

    op.create_table('challenge_inputs',
    sa.Column('challenge_id', sa.UUID(), nullable=False),
    sa.Column('squad_id', sa.UUID(), nullable=False),
    sa.Column('input_data', sa.Text(), nullable=False),
    sa.Column('result_data', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['challenge_id'], ['challenges.id'], name=op.f('fk_challenge_inputs_challenge_id_challenges'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['squad_id'], ['squads.id'], name=op.f('fk_challenge_inputs_squad_id_squads'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('challenge_id', 'squad_id', name=op.f('pk_challenge_inputs'))
    )
    with op.batch_alter_table('challenge_inputs', schema=None) as batch_op:
        batch_op.create_index('ix_challenge_inputs_challenge_id', ['challenge_id'], unique=False)
        batch_op.create_index('ix_challenge_inputs_created_at', ['created_at'], unique=False)
        batch_op.create_index('ix_challenge_inputs_squad_id', ['squad_id'], unique=False)

    op.create_table('challenge_submissions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('challenge_id', sa.UUID(), nullable=False),
    sa.Column('squad_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.String(length=50), nullable=False),
    sa.Column('username', sa.String(length=100), nullable=False),
    sa.Column('submitted_solution', sa.Text(), nullable=False),
    sa.Column('is_correct', sa.Boolean(), nullable=False),
    sa.Column('is_first_success', sa.Boolean(), nullable=False),
    sa.Column('points_earned', sa.Integer(), nullable=True),
    sa.Column('submitted_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['challenge_id'], ['challenges.id'], name=op.f('fk_challenge_submissions_challenge_id_challenges'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['squad_id'], ['squads.id'], name=op.f('fk_challenge_submissions_squad_id_squads'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_challenge_submissions'))
    )
    with op.batch_alter_table('challenge_submissions', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_challenge_submissions_challenge_id'), ['challenge_id'], unique=False)
        batch_op.create_index('ix_challenge_submissions_challenge_squad', ['challenge_id', 'squad_id'], unique=False)
        batch_op.create_index('ix_challenge_submissions_first_success', ['is_first_success', 'submitted_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_challenge_submissions_squad_id'), ['squad_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_challenge_submissions_user_id'), ['user_id'], unique=False)
        batch_op.create_index('ix_challenge_submissions_user_submitted', ['user_id', 'submitted_at'], unique=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('challenge_submissions', schema=None) as batch_op:
        batch_op.drop_index('ix_challenge_submissions_user_submitted')
        batch_op.drop_index(batch_op.f('ix_challenge_submissions_user_id'))
        batch_op.drop_index(batch_op.f('ix_challenge_submissions_squad_id'))
        batch_op.drop_index('ix_challenge_submissions_first_success')
        batch_op.drop_index('ix_challenge_submissions_challenge_squad')
        batch_op.drop_index(batch_op.f('ix_challenge_submissions_challenge_id'))

    op.drop_table('challenge_submissions')
    with op.batch_alter_table('challenge_inputs', schema=None) as batch_op:
        batch_op.drop_index('ix_challenge_inputs_squad_id')
        batch_op.drop_index('ix_challenge_inputs_created_at')
        batch_op.drop_index('ix_challenge_inputs_challenge_id')

    op.drop_table('challenge_inputs')
    with op.batch_alter_table('squad_memberships', schema=None) as batch_op:
        batch_op.drop_index('ix_squad_memberships_user_id')
        batch_op.drop_index('ix_squad_memberships_squad_id')
        batch_op.drop_index('ix_squad_memberships_guild_user')
        batch_op.drop_index('ix_squad_memberships_guild_id')

    op.drop_table('squad_memberships')
    with op.batch_alter_table('security_logs', schema=None) as batch_op:
        batch_op.drop_index('ix_security_logs_user_timestamp')
        batch_op.drop_index(batch_op.f('ix_security_logs_user_identifier'))
        batch_op.drop_index(batch_op.f('ix_security_logs_timestamp'))
        batch_op.drop_index('ix_security_logs_success_timestamp')
        batch_op.drop_index(batch_op.f('ix_security_logs_success'))
        batch_op.drop_index(batch_op.f('ix_security_logs_request_id'))
        batch_op.drop_index('ix_security_logs_ip_timestamp')
        batch_op.drop_index(batch_op.f('ix_security_logs_ip_address'))
        batch_op.drop_index('ix_security_logs_api_key_timestamp')
        batch_op.drop_index(batch_op.f('ix_security_logs_api_key_id'))
        batch_op.drop_index('ix_security_logs_action_timestamp')
        batch_op.drop_index(batch_op.f('ix_security_logs_action'))

    op.drop_table('security_logs')
    with op.batch_alter_table('scheduled_messages', schema=None) as batch_op:
        batch_op.drop_index('ix_scheduled_messages_sent_at')
        batch_op.drop_index('ix_scheduled_messages_scheduled_time')
        batch_op.drop_index('ix_scheduled_messages_is_sent')
        batch_op.drop_index('ix_scheduled_messages_campaign_time')
        batch_op.drop_index(batch_op.f('ix_scheduled_messages_campaign_id'))

    op.drop_table('scheduled_messages')
    with op.batch_alter_table('forum_agent_responses', schema=None) as batch_op:
        batch_op.drop_index('ix_forum_agent_responses_tokens_created')
        batch_op.drop_index(batch_op.f('ix_forum_agent_responses_thread_id'))
        batch_op.drop_index('ix_forum_agent_responses_responded_at')
        batch_op.drop_index(batch_op.f('ix_forum_agent_responses_responded'))
        batch_op.drop_index(batch_op.f('ix_forum_agent_responses_guild_id'))
        batch_op.drop_index('ix_forum_agent_responses_guild_created')
        batch_op.drop_index(batch_op.f('ix_forum_agent_responses_created_at'))
        batch_op.drop_index(batch_op.f('ix_forum_agent_responses_channel_id'))
        batch_op.drop_index('ix_forum_agent_responses_channel_created')
        batch_op.drop_index(batch_op.f('ix_forum_agent_responses_agent_id'))
        batch_op.drop_index('ix_forum_agent_responses_agent_created')

    op.drop_table('forum_agent_responses')
    with op.batch_alter_table('challenges', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_challenges_released_at'))
        batch_op.drop_index(batch_op.f('ix_challenges_order_position'))
        batch_op.drop_index(batch_op.f('ix_challenges_is_released'))
        batch_op.drop_index('ix_challenges_is_announced')
        batch_op.drop_index('ix_challenges_campaign_position')
        batch_op.drop_index(batch_op.f('ix_challenges_campaign_id'))
        batch_op.drop_index(batch_op.f('ix_challenges_announced_at'))

    op.drop_table('challenges')
    with op.batch_alter_table('squads', schema=None) as batch_op:
        batch_op.drop_index('ix_squads_role_id')
        batch_op.drop_index('ix_squads_guild_id')
        batch_op.drop_index('ix_squads_guild_default')
        batch_op.drop_index('ix_squads_guild_active')

    op.drop_table('squads')
    with op.batch_alter_table('squad_sale_events', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_squad_sale_events_start_time'))
        batch_op.drop_index(batch_op.f('ix_squad_sale_events_is_active'))
        batch_op.drop_index('ix_squad_sale_events_guild_id')
        batch_op.drop_index('ix_squad_sale_events_guild_active')
        batch_op.drop_index('ix_squad_sale_events_created_by')

    op.drop_table('squad_sale_events')
    with op.batch_alter_table('help_conversations', schema=None) as batch_op:
        batch_op.drop_index('ix_help_conversations_user_started')
        batch_op.drop_index(batch_op.f('ix_help_conversations_user_id'))
        batch_op.drop_index('ix_help_conversations_tokens_started')
        batch_op.drop_index(batch_op.f('ix_help_conversations_started_at'))
        batch_op.drop_index('ix_help_conversations_session_started')
        batch_op.drop_index(batch_op.f('ix_help_conversations_session_id'))
        batch_op.drop_index(batch_op.f('ix_help_conversations_last_activity_at'))
        batch_op.drop_index(batch_op.f('ix_help_conversations_is_sensitive'))
        batch_op.drop_index(batch_op.f('ix_help_conversations_is_resolved'))
        batch_op.drop_index('ix_help_conversations_guild_started')
        batch_op.drop_index(batch_op.f('ix_help_conversations_guild_id'))
        batch_op.drop_index(batch_op.f('ix_help_conversations_expires_at'))
        batch_op.drop_index(batch_op.f('ix_help_conversations_channel_id'))

    op.drop_table('help_conversations')
    with op.batch_alter_table('forum_agents', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_forum_agents_is_active'))
        batch_op.drop_index('ix_forum_agents_guild_id')
        batch_op.drop_index('ix_forum_agents_guild_active')
        batch_op.drop_index('ix_forum_agents_created_by')

    op.drop_table('forum_agents')
    with op.batch_alter_table('campaigns', schema=None) as batch_op:
        batch_op.drop_index('ix_campaigns_start_time')
        batch_op.drop_index(batch_op.f('ix_campaigns_is_active'))
        batch_op.drop_index(batch_op.f('ix_campaigns_guild_id'))
        batch_op.drop_index('ix_campaigns_guild_active')
        batch_op.drop_index('ix_campaigns_created_by')

    op.drop_table('campaigns')
    with op.batch_alter_table('bytes_transactions', schema=None) as batch_op:
        batch_op.drop_index('ix_bytes_transactions_receiver_id')
        batch_op.drop_index('ix_bytes_transactions_guild_receiver')
        batch_op.drop_index('ix_bytes_transactions_guild_id')
        batch_op.drop_index('ix_bytes_transactions_guild_giver')
        batch_op.drop_index('ix_bytes_transactions_giver_id')
        batch_op.drop_index('ix_bytes_transactions_created_at')

    op.drop_table('bytes_transactions')
    op.drop_table('bytes_configs')
    op.drop_table('bytes_balances')
    with op.batch_alter_table('blog_posts', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_blog_posts_slug'))
        batch_op.drop_index(batch_op.f('ix_blog_posts_published_at'))
        batch_op.drop_index('ix_blog_posts_published')
        batch_op.drop_index(batch_op.f('ix_blog_posts_is_published'))
        batch_op.drop_index('ix_blog_posts_created_at')
        batch_op.drop_index('ix_blog_posts_author')

    op.drop_table('blog_posts')
    with op.batch_alter_table('api_keys', schema=None) as batch_op:
        batch_op.drop_index('ix_api_keys_prefix')
        batch_op.drop_index('ix_api_keys_hash')
        batch_op.drop_index('ix_api_keys_created_by')
        batch_op.drop_index('ix_api_keys_active', postgresql_where='is_active = true')

    op.drop_table('api_keys')
    # ### end Alembic commands ###